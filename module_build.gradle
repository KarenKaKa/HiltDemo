if (isBuildModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.buildToolsVersion

    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                manifest.srcFile 'src/main/moduleManifest/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    compileOptions {
        sourceCompatibility versions.sourceCompatibility
        targetCompatibility versions.targetCompatibility
    }

    dataBinding {
        enabled = true
    }
    kotlinOptions {
        jvmTarget = versions.jvmTarget
    }
}

dependencies {
    api project(":module_common")
    //test
    testImplementation "junit:junit:${test_versions.junit}"
    androidTestImplementation "androidx.test.ext:junit:${test_versions.ext_junit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${test_versions.espresso_core}"

    // Hilt
    implementation "com.google.dagger:hilt-android:$dagger_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_version"

    //arouter
    kapt "com.alibaba:arouter-compiler:${arouter_versions.arouter_compiler}"
}

kapt {
    correctErrorTypes true
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}